dead = false;
canInitDeath = true;
beenOutsideView = false;
canHit = true;
xspeed = 0;
yspeed = 0;

update_rate = 1;

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 1;

//Reflection
reflectProjectiles = false;
reflectProjectilesRight = false; //Only reflect projectiles that come from the right
reflectProjectilesLeft = false; //Only reflect projectiles that come from the left

respawn = true; //Should we respawn after leaving the screen and entering it again?
neverDespawn = false;

targetable = true;  //For Hornet Chaser and other homing weapons

useHitBox = false;
hitbox_left = bbox_left - x;
hitbox_right = bbox_right - x;
hitbox_top = bbox_top - y;
hitbox_bottom = bbox_bottom - y;

//Default damage
var oldFrozen = global.frozen;
for (var i = 0; object_exists(i); i++) {
    if (object_get_parent(i) == prtPlayerProjectile or object_get_parent(object_get_parent(i)) == prtPlayerProjectile) and i != prtShieldWeapon {
        global.frozen = true;
        var proj = instance_create(0, 0, i);
        //print(i, proj, object_get_name(i), proj.defaultDamage, proj.defaultBossDamage, global.frozen);
        damage[i] = proj.defaultDamage;
        with proj instance_destroy();
        //print("depois", i, global.frozen);
    }
}
global.frozen = oldFrozen;
